[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column abstract-1:abstract_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "abstract-1:abstract_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column alternative_title-1:alternative_title_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "alternative_title-1:alternative_title_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column copyright_note-1:copyright_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "copyright_note-1:copyright_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column extent-1:extent_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "extent-1:extent_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-1:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-1:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-2:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-2:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-3:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-3:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-4:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-4:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-5:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-5:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-6:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-6:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-7:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-7:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-8:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-8:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-9:internal_note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-9:internal_note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-1:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-1:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-2:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-2:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-3:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-3:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-4:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-4:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-5:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-5:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-6:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-6:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-7:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-7:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-8:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-8:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-9:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-9:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-10:note_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-10:note_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column place_of_origin-1:place_of_origin_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_of_origin-1:place_of_origin_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column publisher-1:publisher_value using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "publisher-1:publisher_value",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column title-1:title_sort_portion using expression grel:value.replace(';','---')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "title-1:title_sort_portion",
    "expression": "grel:value.replace(';','---')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Master assets filenames using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Master assets filenames",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _import_file.original_file_path using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.original_file_path",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _import_file.import_path using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.import_path",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _import_file.import_type using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.import_type",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Service (Mezzanine) assets filenames using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Service (Mezzanine) assets filenames",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _import_file.service_copy_import_path using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.service_copy_import_path",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _import_file.service_copy_import_type using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.service_copy_import_type",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Access (Streaming) assets filenames using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Access (Streaming) assets filenames",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _import_file.access_copy_import_path using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.access_copy_import_path",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note_derived_from-1:note_derived_from_value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note_derived_from-1:note_derived_from_value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column object_in_context_url-1:object_in_context_url_value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "object_in_context_url-1:object_in_context_url_value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column omeka_identifier-1:omeka_identifier_value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "omeka_identifier-1:omeka_identifier_value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column publish_note-1:publish_note_value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "publish_note-1:publish_note_value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column restriction_on_access-1:restriction_on_access_value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-1:restriction_on_access_value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column restriction_on_access-2:restriction_on_access_value using expression grel:'DELETE;' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-2:restriction_on_access_value",
    "expression": "grel:'DELETE;' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _project.string_key using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_project.string_key",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _publish using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_publish",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _publish_targets-1.string_key using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_publish_targets-1.string_key",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _restrictions.restricted_size_image using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_restrictions.restricted_size_image",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column copyright_note-1:copyright_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "copyright_note-1:copyright_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column digital_origin-1:digital_origin_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "digital_origin-1:digital_origin_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column embargo_release_date-1:embargo_release_date_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "embargo_release_date-1:embargo_release_date_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column extent-1:extent_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "extent-1:extent_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column extent-2:extent_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "extent-2:extent_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column abstract-1:abstract_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "abstract-1:abstract_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column alternative_title-1:alternative_title_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "alternative_title-1:alternative_title_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-1:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-1:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-2:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-2:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-3:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-3:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-4:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-4:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-5:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-5:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-6:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-6:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-7:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-7:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-8:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-8:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-9:internal_note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "internal_note-9:internal_note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-1:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-1:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-1:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-1:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-2:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-2:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-2:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-2:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-3:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-3:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-3:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-3:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-4:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-4:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-4:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-4:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-5:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-5:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-5:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-5:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-6:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-6:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-6:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-6:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-7:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-7:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-7:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-7:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-8:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-8:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-8:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-8:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-9:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-9:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-9:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-9:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-10:note_type using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-10:note_type",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-10:note_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note-10:note_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column order_number-1:order_number_value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "order_number-1:order_number_value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column title-1:title_non_sort_portion using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "title-1:title_non_sort_portion",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column title-1:title_sort_portion using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "title-1:title_sort_portion",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column use_and_reproduction-1:use_and_reproduction_term.value using expression grel:value + ';' + value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "use_and_reproduction-1:use_and_reproduction_term.value",
    "expression": "grel:value + ';' + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _digital_object_type.string_key using expression grel:value.replace('item','item;asset')",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "_digital_object_type.string_key",
    "expression": "grel:value.replace('item','item;asset')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _digital_object_type.string_key",
    "columnName": "_digital_object_type.string_key",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column Master assets filenames",
    "columnName": "Master assets filenames",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _import_file.original_file_path",
    "columnName": "_import_file.original_file_path",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _import_file.import_path",
    "columnName": "_import_file.import_path",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _import_file.import_type",
    "columnName": "_import_file.import_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column Service (Mezzanine) assets filenames",
    "columnName": "Service (Mezzanine) assets filenames",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _import_file.service_copy_import_path",
    "columnName": "_import_file.service_copy_import_path",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _import_file.service_copy_import_type",
    "columnName": "_import_file.service_copy_import_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column Access (Streaming) assets filenames",
    "columnName": "Access (Streaming) assets filenames",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _import_file.access_copy_import_path",
    "columnName": "_import_file.access_copy_import_path",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _project.string_key",
    "columnName": "_project.string_key",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _publish",
    "columnName": "_publish",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _publish_targets-1.string_key",
    "columnName": "_publish_targets-1.string_key",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column _restrictions.restricted_size_image",
    "columnName": "_restrictions.restricted_size_image",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column abstract-1:abstract_value",
    "columnName": "abstract-1:abstract_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column alternative_title-1:alternative_title_value",
    "columnName": "alternative_title-1:alternative_title_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column copyright_note-1:copyright_note_value",
    "columnName": "copyright_note-1:copyright_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column digital_origin-1:digital_origin_value",
    "columnName": "digital_origin-1:digital_origin_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column embargo_release_date-1:embargo_release_date_value",
    "columnName": "embargo_release_date-1:embargo_release_date_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column extent-1:extent_value",
    "columnName": "extent-1:extent_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column extent-2:extent_value",
    "columnName": "extent-2:extent_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-1:internal_note_value",
    "columnName": "internal_note-1:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-2:internal_note_value",
    "columnName": "internal_note-2:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-3:internal_note_value",
    "columnName": "internal_note-3:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-4:internal_note_value",
    "columnName": "internal_note-4:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-5:internal_note_value",
    "columnName": "internal_note-5:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-6:internal_note_value",
    "columnName": "internal_note-6:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-7:internal_note_value",
    "columnName": "internal_note-7:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-8:internal_note_value",
    "columnName": "internal_note-8:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column internal_note-9:internal_note_value",
    "columnName": "internal_note-9:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-1:note_type",
    "columnName": "note-1:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-1:note_value",
    "columnName": "note-1:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-2:note_type",
    "columnName": "note-2:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-2:note_value",
    "columnName": "note-2:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-3:note_type",
    "columnName": "note-3:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-3:note_value",
    "columnName": "note-3:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-4:note_type",
    "columnName": "note-4:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-4:note_value",
    "columnName": "note-4:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-5:note_type",
    "columnName": "note-5:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-5:note_value",
    "columnName": "note-5:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-6:note_type",
    "columnName": "note-6:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-6:note_value",
    "columnName": "note-6:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-7:note_type",
    "columnName": "note-7:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-7:note_value",
    "columnName": "note-7:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-8:note_type",
    "columnName": "note-8:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-8:note_value",
    "columnName": "note-8:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-9:note_type",
    "columnName": "note-9:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-9:note_value",
    "columnName": "note-9:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-10:note_type",
    "columnName": "note-10:note_type",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note-10:note_value",
    "columnName": "note-10:note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column note_derived_from-1:note_derived_from_value",
    "columnName": "note_derived_from-1:note_derived_from_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column object_in_context_url-1:object_in_context_url_value",
    "columnName": "object_in_context_url-1:object_in_context_url_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column omeka_identifier-1:omeka_identifier_value",
    "columnName": "omeka_identifier-1:omeka_identifier_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column order_number-1:order_number_value",
    "columnName": "order_number-1:order_number_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column publish_note-1:publish_note_value",
    "columnName": "publish_note-1:publish_note_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column restriction_on_access-1:restriction_on_access_value",
    "columnName": "restriction_on_access-1:restriction_on_access_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value",
    "columnName": "restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value",
    "columnName": "restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column restriction_on_access-2:restriction_on_access_value",
    "columnName": "restriction_on_access-2:restriction_on_access_value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column title-1:title_non_sort_portion",
    "columnName": "title-1:title_non_sort_portion",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column title-1:title_sort_portion",
    "columnName": "title-1:title_sort_portion",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column use_and_reproduction-1:use_and_reproduction_term.value",
    "columnName": "use_and_reproduction-1:use_and_reproduction_term.value",
    "keyColumnName": "_identifiers-1",
    "separator": ";"
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _digital_object_type.string_key",
    "columnName": "_digital_object_type.string_key",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column Master assets filenames",
    "columnName": "Master assets filenames",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _import_file.original_file_path",
    "columnName": "_import_file.original_file_path",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _import_file.import_path",
    "columnName": "_import_file.import_path",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _import_file.import_type",
    "columnName": "_import_file.import_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column Service (Mezzanine) assets filenames",
    "columnName": "Service (Mezzanine) assets filenames",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _import_file.service_copy_import_path",
    "columnName": "_import_file.service_copy_import_path",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _import_file.service_copy_import_type",
    "columnName": "_import_file.service_copy_import_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column Access (Streaming) assets filenames",
    "columnName": "Access (Streaming) assets filenames",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _import_file.access_copy_import_path",
    "columnName": "_import_file.access_copy_import_path",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _project.string_key",
    "columnName": "_project.string_key",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _publish",
    "columnName": "_publish",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _publish_targets-1.string_key",
    "columnName": "_publish_targets-1.string_key",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column _restrictions.restricted_size_image",
    "columnName": "_restrictions.restricted_size_image",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column abstract-1:abstract_value",
    "columnName": "abstract-1:abstract_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column alternative_title-1:alternative_title_value",
    "columnName": "alternative_title-1:alternative_title_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column copyright_note-1:copyright_note_value",
    "columnName": "copyright_note-1:copyright_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column digital_origin-1:digital_origin_value",
    "columnName": "digital_origin-1:digital_origin_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column embargo_release_date-1:embargo_release_date_value",
    "columnName": "embargo_release_date-1:embargo_release_date_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column extent-1:extent_value",
    "columnName": "extent-1:extent_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column extent-2:extent_value",
    "columnName": "extent-2:extent_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-1:internal_note_value",
    "columnName": "internal_note-1:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-2:internal_note_value",
    "columnName": "internal_note-2:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-3:internal_note_value",
    "columnName": "internal_note-3:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-4:internal_note_value",
    "columnName": "internal_note-4:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-5:internal_note_value",
    "columnName": "internal_note-5:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-6:internal_note_value",
    "columnName": "internal_note-6:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-7:internal_note_value",
    "columnName": "internal_note-7:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-8:internal_note_value",
    "columnName": "internal_note-8:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column internal_note-9:internal_note_value",
    "columnName": "internal_note-9:internal_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-1:note_type",
    "columnName": "note-1:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-1:note_value",
    "columnName": "note-1:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-2:note_type",
    "columnName": "note-2:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-2:note_value",
    "columnName": "note-2:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-3:note_type",
    "columnName": "note-3:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-3:note_value",
    "columnName": "note-3:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-4:note_type",
    "columnName": "note-4:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-4:note_value",
    "columnName": "note-4:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-5:note_type",
    "columnName": "note-5:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-5:note_value",
    "columnName": "note-5:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-6:note_type",
    "columnName": "note-6:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-6:note_value",
    "columnName": "note-6:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-7:note_type",
    "columnName": "note-7:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-7:note_value",
    "columnName": "note-7:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-8:note_type",
    "columnName": "note-8:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-8:note_value",
    "columnName": "note-8:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-9:note_type",
    "columnName": "note-9:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-9:note_value",
    "columnName": "note-9:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-10:note_type",
    "columnName": "note-10:note_type",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note-10:note_value",
    "columnName": "note-10:note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column note_derived_from-1:note_derived_from_value",
    "columnName": "note_derived_from-1:note_derived_from_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column object_in_context_url-1:object_in_context_url_value",
    "columnName": "object_in_context_url-1:object_in_context_url_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column omeka_identifier-1:omeka_identifier_value",
    "columnName": "omeka_identifier-1:omeka_identifier_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column order_number-1:order_number_value",
    "columnName": "order_number-1:order_number_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column publish_note-1:publish_note_value",
    "columnName": "publish_note-1:publish_note_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column restriction_on_access-1:restriction_on_access_value",
    "columnName": "restriction_on_access-1:restriction_on_access_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value",
    "columnName": "restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value",
    "columnName": "restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column restriction_on_access-2:restriction_on_access_value",
    "columnName": "restriction_on_access-2:restriction_on_access_value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column title-1:title_non_sort_portion",
    "columnName": "title-1:title_non_sort_portion",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column title-1:title_sort_portion",
    "columnName": "title-1:title_sort_portion",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column use_and_reproduction-1:use_and_reproduction_term.value",
    "columnName": "use_and_reproduction-1:use_and_reproduction_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/column-addition",
    "description": "Create column _parent_digital_objects-1.identifier at index 1 based on column _identifiers-1 using expression grel:row.record.cells['_identifiers-1'].value[0]",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "asset",
                "l": "asset"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "_parent_digital_objects-1.identifier",
    "columnInsertIndex": 1,
    "baseColumnName": "_identifiers-1",
    "expression": "grel:row.record.cells['_identifiers-1'].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Master assets filenames",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Master assets filenames",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column _import_file.original_file_path",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.original_file_path",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column _import_file.import_path",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.import_path",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column _import_file.import_type",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.import_type",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Service (Mezzanine) assets filenames",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Service (Mezzanine) assets filenames",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column _import_file.service_copy_import_path",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.service_copy_import_path",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column _import_file.service_copy_import_type",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.service_copy_import_type",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column Access (Streaming) assets filenames",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Access (Streaming) assets filenames",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column _import_file.access_copy_import_path",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "_import_file.access_copy_import_path",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column note_derived_from-1:note_derived_from_value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "note_derived_from-1:note_derived_from_value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column object_in_context_url-1:object_in_context_url_value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "object_in_context_url-1:object_in_context_url_value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column omeka_identifier-1:omeka_identifier_value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "omeka_identifier-1:omeka_identifier_value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column publish_note-1:publish_note_value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "publish_note-1:publish_note_value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column restriction_on_access-1:restriction_on_access_value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-1:restriction_on_access_value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-1:restriction_on_access_location-1:restriction_on_access_location_term.value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-2:restriction_on_access_affiliation-1:restriction_on_access_affiliation_value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column restriction_on_access-2:restriction_on_access_value",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "restriction_on_access-2:restriction_on_access_value",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "DELETE"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column abstract-1:abstract_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "abstract-1:abstract_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column alternative_title-1:alternative_title_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "alternative_title-1:alternative_title_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column copyright_note-1:copyright_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "copyright_note-1:copyright_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column extent-1:extent_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "extent-1:extent_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-1:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-1:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-2:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-2:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-3:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-3:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-4:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-4:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-5:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-5:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-6:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-6:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-7:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-7:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-8:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-8:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column internal_note-9:internal_note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "internal_note-9:internal_note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-1:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-1:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-2:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-2:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-3:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-3:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-4:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-4:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-5:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-5:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-6:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-6:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-7:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-7:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-8:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-8:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-9:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-9:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column note-10:note_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "note-10:note_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column place_of_origin-1:place_of_origin_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_of_origin-1:place_of_origin_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column publisher-1:publisher_value using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "publisher-1:publisher_value",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column title-1:title_sort_portion using expression grel:value.replace('---',';')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "title-1:title_sort_portion",
    "expression": "grel:value.replace('---',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _identifiers-1 using expression grel:if(value == null,row.record.cells['_identifiers-1'].value[0] + '_00' + ((row.record.fromRowIndex - row.index) * -1),row.record.cells['_identifiers-1'].value[0])",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "_identifiers-1",
    "expression": "grel:if(value == null,row.record.cells['_identifiers-1'].value[0] + '_00' + ((row.record.fromRowIndex - row.index) * -1),row.record.cells['_identifiers-1'].value[0])",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column _identifiers-1 using expression grel:value.replace(/\\.0$/,'')",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "_identifiers-1",
    "expression": "grel:value.replace(/\\.0$/,'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]