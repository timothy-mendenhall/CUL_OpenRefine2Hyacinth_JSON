[
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column name-1:name_term.value",
    "columnName": "name-1:name_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/column-addition",
    "description": "Create column name-1:name_term.name_type at index 38 based on column name-1:name_term.value using expression grel:'personal'",
    "engineConfig": {
      "facets": [
        {
          "name": "name-1:name_term.value",
          "columnName": "name-1:name_term.value",
          "query": "^([a-zA-Z\\s])+,",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false,
          "type": "text"
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "name-1:name_term.name_type",
    "columnInsertIndex": 38,
    "baseColumnName": "name-1:name_term.value",
    "expression": "grel:'personal'",
    "onError": "set-to-blank"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name-1:name_term.name_type",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "name-1:name_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "name-1:name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "name-1:name_term.name_type",
          "expression": "isBlank(value).toString()",
          "columnName": "name-1:name_term.name_type",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "true",
                "l": "true"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "name-1:name_term.name_type",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "corporate"
      }
    ]
  },
  {
    "op": "core/recon",
    "description": "Reconcile cells in column name-1:name_term.value to type /people/person",
    "columnName": "name-1:name_term.value",
    "config": {
      "mode": "standard-service",
      "service": "http://refine.codefork.com/reconcile/viafproxy/LC",
      "identifierSpace": "http://rdf.freebase.com/ns/user/hangy/viaf",
      "schemaSpace": "http://rdf.freebase.com/ns/type.object.id",
      "type": {
        "id": "/people/person",
        "name": "Person"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "name-1:name_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "name-1:name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "name-1:name_term.name_type",
          "expression": "value",
          "columnName": "name-1:name_term.name_type",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "personal",
                "l": "personal"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    }
  },
  {
    "op": "core/recon",
    "description": "Reconcile cells in column name-1:name_term.value to type /organization/organization",
    "columnName": "name-1:name_term.value",
    "config": {
      "mode": "standard-service",
      "service": "http://refine.codefork.com/reconcile/viafproxy/LC",
      "identifierSpace": "http://rdf.freebase.com/ns/user/hangy/viaf",
      "schemaSpace": "http://rdf.freebase.com/ns/type.object.id",
      "type": {
        "id": "/organization/organization",
        "name": "Corporate Name"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "name-1:name_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "name-1:name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "name-1:name_term.name_type",
          "expression": "value",
          "columnName": "name-1:name_term.name_type",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "corporate",
                "l": "corporate"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    }
  },
  {
    "op": "core/column-addition",
    "description": "Create column name-1:name_term.uri at index 158 based on column name-1:name_term.value using expression grel:\"http://id.loc.gov/authorities/names/\" + cell.recon.match.id",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "name-1:name_term.uri",
    "baseColumnName": "name-1:name_term.value",
    "expression": "grel:'http://id.loc.gov/authorities/names/' + cell.recon.match.id",
    "onError": "set-to-blank"
  },
   {
    "op": "core/column-addition",
    "description": "Create column name-1:name_term.authority at index 110 based on column name-1:name_term.value using expression grel:'fast'",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "name-1:name_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "name-1:name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "name-1:name_term.authority",
    "baseColumnName": "name-1:name_term.value",
    "expression": "grel:'naf'",
    "onError": "set-to-blank"
  },
{
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name-1:name_term.authority",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "name-1:name_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "name-1:name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "name-1:name_term.authority",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name-1:name_term.uri",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "name-1:name_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "name-1:name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "name-1:name_term.uri",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column name-1:name_role-1:name_role_term.value",
    "columnName": "name-1:name_role-1:name_role_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/column-split",
    "description": "Split column name-1:name_role-1:name_role_term.value by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name-1:name_role-1:name_role_term.value",
    "guessCellType": false,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "--",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-rename",
    "description": "Rename column name-1:name_role-1:name_role_term.value 1 to name-1:name_role-1:name_role_term.value",
    "oldColumnName": "name-1:name_role-1:name_role_term.value 1",
    "newColumnName": "name-1:name_role-1:name_role_term.value"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column name-1:name_role-1:name_role_term.value 2 to name-1:name_role-2:name_role_term.value",
    "oldColumnName": "name-1:name_role-1:name_role_term.value 2",
    "newColumnName": "name-1:name_role-2:name_role_term.value"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column name-1:name_role-1:name_role_term.value 3 to name-1:name_role-3:name_role_term.value",
    "oldColumnName": "name-1:name_role-1:name_role_term.value 3",
    "newColumnName": "name-1:name_role-3:name_role_term.value"
  },
  {
    "op": "core/column-addition",
    "description": "Create column name-1:name_role-1:name_role_term.authority at index 55 based on column name-1:name_role-1:name_role_term.value using expression grel:value.replace(/.+/,\"marcrelator\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "name-1:name_role-1:name_role_term.authority",
    "baseColumnName": "name-1:name_role-1:name_role_term.value",
    "expression": "grel:value.replace(/.+/,\"marcrelator\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column name-1:name_role-2:name_role_term.authority at index 55 based on column name-1:name_role-2:name_role_term.value using expression grel:value.replace(/.+/,\"marcrelator\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "name-1:name_role-2:name_role_term.authority",
    "baseColumnName": "name-1:name_role-2:name_role_term.value",
    "expression": "grel:value.replace(/.+/,\"marcrelator\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column name-1:name_role-3:name_role_term.authority at index 55 based on column name-1:name_role-3:name_role_term.value using expression grel:value.replace(/.+/,\"marcrelator\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "name-1:name_role-3:name_role_term.authority",
    "baseColumnName": "name-1:name_role-3:name_role_term.value",
    "expression": "grel:value.replace(/.+/,\"marcrelator\")",
    "onError": "set-to-blank"
  },
   {
    "op": "core/column-addition",
    "description": "Create column name-1:name_role-1:name_role_term.uri at index 53 based on column name-1:name_role-1:name_role_term.value using expression grel:value.cross(\"MARCrelators\",\"Label\").cells[\"URI\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "name-1:name_role-1:name_role_term.uri",
    "baseColumnName": "name-1:name_role-1:name_role_term.value",
    "expression": "grel:value.cross(\"MARCrelators\",\"Label\").cells[\"URI\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column name-1:name_role-2:name_role_term.uri at index 54 based on column name-1:name_role-2:name_role_term.value using expression grel:value.cross(\"MARCrelators\",\"Label\").cells[\"URI\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "name-1:name_role-2:name_role_term.uri",
    "baseColumnName": "name-1:name_role-2:name_role_term.value",
    "expression": "grel:value.cross(\"MARCrelators\",\"Label\").cells[\"URI\"].value[0]",
    "onError": "set-to-blank"
  },
   {
    "op": "core/column-addition",
    "description": "Create column name-1:name_role-3:name_role_term.uri at index 53 based on column name-1:name_role-1:name_role_term.value using expression grel:value.cross(\"MARCrelators\",\"Label\").cells[\"URI\"].value[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "name-1:name_role-3:name_role_term.uri",
    "baseColumnName": "name-1:name_role-3:name_role_term.value",
    "expression": "grel:value.cross(\"MARCrelators\",\"Label\").cells[\"URI\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name-1:name_role-2:name_role_term.value using expression grel:if(isNotNull(cells[\"name-1:name_role-3:name_role_term.value\"]),value + \"--\" + cells[\"name-1:name_role-3:name_role_term.value\"].value,value)",
    "engineConfig": {
      
      "mode": "row-based"
    },
    "columnName": "name-1:name_role-2:name_role_term.value",
    "expression": "grel:if(isNotNull(cells[\"name-1:name_role-3:name_role_term.value\"]),value + \"--\" + cells[\"name-1:name_role-3:name_role_term.value\"].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name-1:name_role-1:name_role_term.value using expression grel:if(isNotNull(cells[\"name-1:name_role-2:name_role_term.value\"]),value + \"--\" + cells[\"name-1:name_role-2:name_role_term.value\"].value,value)",
    "engineConfig": {
      
      "mode": "row-based"
    },
    "columnName": "name-1:name_role-1:name_role_term.value",
    "expression": "grel:if(isNotNull(cells[\"name-1:name_role-2:name_role_term.value\"]),value + \"--\" + cells[\"name-1:name_role-2:name_role_term.value\"].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
    {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name-1:name_role-2:name_role_term.authority using expression grel:if(isNotNull(cells[\"name-1:name_role-3:name_role_term.authority\"]),value + \"--\" + cells[\"name-1:name_role-3:name_role_term.authority\"].value,value)",
    "engineConfig": {
      
      "mode": "row-based"
    },
    "columnName": "name-1:name_role-2:name_role_term.authority",
    "expression": "grel:if(isNotNull(cells[\"name-1:name_role-3:name_role_term.authority\"]),value + \"--\" + cells[\"name-1:name_role-3:name_role_term.authority\"].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name-1:name_role-1:name_role_term.authority using expression grel:if(isNotNull(cells[\"name-1:name_role-2:name_role_term.authority\"]),value + \"--\" + cells[\"name-1:name_role-2:name_role_term.authority\"].value,value)",
    "engineConfig": {
      
      "mode": "row-based"
    },
    "columnName": "name-1:name_role-1:name_role_term.authority",
    "expression": "grel:if(isNotNull(cells[\"name-1:name_role-2:name_role_term.authority\"]),value + \"--\" + cells[\"name-1:name_role-2:name_role_term.authority\"].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name-1:name_role-2:name_role_term.uri using expression grel:if(isNotNull(cells[\"name-1:name_role-3:name_role_term.uri\"]),value + \"--\" + cells[\"name-1:name_role-3:name_role_term.uri\"].value,value)",
    "engineConfig": {
      
      "mode": "row-based"
    },
    "columnName": "name-1:name_role-2:name_role_term.uri",
    "expression": "grel:if(isNotNull(cells[\"name-1:name_role-3:name_role_term.uri\"]),value + \"--\" + cells[\"name-1:name_role-3:name_role_term.uri\"].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name-1:name_role-1:name_role_term.uri using expression grel:if(isNotNull(cells[\"name-1:name_role-2:name_role_term.uri\"]),value + \"--\" + cells[\"name-1:name_role-2:name_role_term.uri\"].value,value)",
    "engineConfig": {
      
      "mode": "row-based"
    },
    "columnName": "name-1:name_role-1:name_role_term.uri",
    "expression": "grel:if(isNotNull(cells[\"name-1:name_role-2:name_role_term.uri\"]),value + \"--\" + cells[\"name-1:name_role-2:name_role_term.uri\"].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-removal",
    "description": "Remove column name-1:name_role-2:name_role_term.value",
    "columnName": "name-1:name_role-2:name_role_term.value"
  },
   {
    "op": "core/column-removal",
    "description": "Remove column name-1:name_role-2:name_role_term.authority",
    "columnName": "name-1:name_role-2:name_role_term.authority"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column name-1:name_role-2:name_role_term.uri",
    "columnName": "name-1:name_role-2:name_role_term.uri"
  },
   {
    "op": "core/column-removal",
    "description": "Remove column name-1:name_role-3:name_role_term.value",
    "columnName": "name-1:name_role-3:name_role_term.value"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column name-1:name_role-3:name_role_term.authority",
    "columnName": "name-1:name_role-3:name_role_term.authority"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column name-1:name_role-3:name_role_term.uri",
    "columnName": "name-1:name_role-3:name_role_term.uri"
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column subject_topic-1:subject_topic_term.value",
    "columnName": "subject_topic-1:subject_topic_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
 {
    "op": "core/recon",
    "description": "Reconcile cells in column subject_topic-1:subject_topic_term.value to type /fast/all",
    "columnName": "subject_topic-1:subject_topic_term.value",
    "config": {
      "mode": "standard-service",
      "service": "http://127.0.0.1:5000/reconcile",
      "identifierSpace": null,
      "schemaSpace": null,
      "type": {
        "id": "/fast/all",
        "name": "/fast/all"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    }
  },
  {
    "op": "core/column-addition",
    "description": "Create column subject_topic-1:subject_topic_term.uri at index 110 based on column subject_topic-1:subject_topic_term.value using expression grel:cell.recon.match.id",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "subject_topic-1:subject_topic_term.uri",
    "baseColumnName": "subject_topic-1:subject_topic_term.value",
    "expression": "grel:cell.recon.match.id",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column subject_topic-1:subject_topic_term.authority at index 110 based on column subject_topic-1:subject_topic_term.value using expression grel:'fast'",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_topic-1:subject_topic_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_topic-1:subject_topic_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "subject_topic-1:subject_topic_term.authority",
    "baseColumnName": "subject_topic-1:subject_topic_term.value",
    "expression": "grel:'fast'",
    "onError": "set-to-blank"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column subject_topic-1:subject_topic_term.authority",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_topic-1:subject_topic_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_topic-1:subject_topic_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "subject_topic-1:subject_topic_term.authority",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column subject_topic-1:subject_topic_term.uri",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_topic-1:subject_topic_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_topic-1:subject_topic_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "subject_topic-1:subject_topic_term.uri",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
    {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column subject_name-1:subject_name_term.value",
    "columnName": "subject_name-1:subject_name_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/column-addition",
    "description": "Create column subject_name-1:name_term.name_type at index 43 based on column subject_name-1:name_term.value using expression grel:'personal'",
    "engineConfig": {
      "facets": [
        {
          "name": "subject_name-1:name_term.value",
          "columnName": "subject_name-1:name_term.value",
          "query": "^([a-zA-Z\\s])+,",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false,
          "type": "text"
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "subject_name-1:name_term.name_type",
    "columnInsertIndex": 43,
    "baseColumnName": "subject_name-1:name_term.value",
    "expression": "grel:'personal'",
    "onError": "set-to-blank"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column subject_name-1:name_term.name_type",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_name-1:name_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "subject_name-1:name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "subject_name-1:name_term.name_type",
          "expression": "isBlank(value).toString()",
          "columnName": "subject_name-1:name_term.name_type",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "true",
                "l": "true"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "subject_name-1:name_term.name_type",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "corporate"
      }
    ]
  },
  {
    "op": "core/recon",
    "description": "Reconcile cells in column subject_name-1:subject_name_term.value to type /people/person",
    "columnName": "subject_name-1:subject_name_term.value",
    "config": {
      "mode": "standard-service",
      "service": "http://refine.codefork.com/reconcile/viafproxy/LC",
      "identifierSpace": "http://rdf.freebase.com/ns/user/hangy/viaf",
      "schemaSpace": "http://rdf.freebase.com/ns/type.object.id",
      "type": {
        "id": "/people/person",
        "name": "Person"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_name-1:subject_name_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "subject_name-1:subject_name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "subject_name-1:subject_name_term.name_type",
          "expression": "value",
          "columnName": "subject_name-1:subject_name_term.name_type",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "personal",
                "l": "personal"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    }
  },
  {
    "op": "core/recon",
    "description": "Reconcile cells in column subject_name-1:subject_name_term.value to type /organization/organization",
    "columnName": "subject_name-1:subject_name_term.value",
    "config": {
      "mode": "standard-service",
      "service": "http://refine.codefork.com/reconcile/viafproxy/LC",
      "identifierSpace": "http://rdf.freebase.com/ns/user/hangy/viaf",
      "schemaSpace": "http://rdf.freebase.com/ns/type.object.id",
      "type": {
        "id": "/organization/organization",
        "name": "Corporate Name"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_name-1:subject_name_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "subject_name-1:subject_name_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "subject_name-1:subject_name_term.name_type",
          "expression": "value",
          "columnName": "subject_name-1:subject_name_term.name_type",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "corporate",
                "l": "corporate"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    }
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column subject_geographic-1:subject_geographic_term.value",
    "columnName": "subject_geographic-1:subject_geographic_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/recon",
    "description": "Reconcile cells in column subject_geographic-1:subject_geographic_term.value to type /location/location",
    "columnName": "subject_geographic-1:subject_geographic_term.value",
    "config": {
      "mode": "standard-service",
      "service": "http://refine.codefork.com/reconcile/viafproxy/LC",
      "identifierSpace": "http://rdf.freebase.com/ns/user/hangy/viaf",
      "schemaSpace": "http://rdf.freebase.com/ns/type.object.id",
      "type": {
        "id": "/location/location",
        "name": "Geographic Name"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": true,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "subject_geographic-1:subject_geographic_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "subject_geographic-1:subject_geographic_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    }
  },
  {
    "op": "core/column-addition",
    "description": "Create column subject_geographic-1:subject_geographic_term.uri at index 158 based on column subject_geographic-1:subject_geographic_term.value using expression grel:\"http://id.loc.gov/authorities/names/\" + cell.recon.match.id",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "subject_geographic-1:subject_geographic_term.uri",
    "baseColumnName": "subject_geographic-1:subject_geographic_term.value",
    "expression": "grel:'http://id.loc.gov/authorities/names/' + cell.recon.match.id",
    "onError": "set-to-blank"
  },
   {
    "op": "core/column-addition",
    "description": "Create column subject_geographic-1:subject_geographic_term.authority at index 110 based on column subject_geographic-1:subject_geographic_term.value using expression grel:'fast'",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_geographic-1:subject_geographic_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_geographic-1:subject_geographic_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "subject_geographic-1:subject_geographic_term.authority",
    "baseColumnName": "subject_geographic-1:subject_geographic_term.value",
    "expression": "grel:'naf'",
    "onError": "set-to-blank"
  },
{
    "op": "core/mass-edit",
    "description": "Mass edit cells in column subject_geographic-1:subject_geographic_term.authority",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_geographic-1:subject_geographic_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_geographic-1:subject_geographic_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "subject_geographic-1:subject_geographic_term.authority",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column subject_geographic-1:subject_geographic_term.uri",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_geographic-1:subject_geographic_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_geographic-1:subject_geographic_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "subject_geographic-1:subject_geographic_term.uri",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column subject_title-1:subject_title_term.value",
    "columnName": "subject_title-1:subject_title_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/recon",
    "description": "Reconcile cells in column subject_title-1:subject_title_term.value to type /book/book",
    "columnName": "subject_title-1:subject_title_term.value",
    "config": {
      "mode": "standard-service",
      "service": "http://refine.codefork.com/reconcile/viafproxy/LC",
      "identifierSpace": "http://rdf.freebase.com/ns/user/hangy/viaf",
      "schemaSpace": "http://rdf.freebase.com/ns/type.object.id",
      "type": {
        "id": "/book/book",
        "name": "Work"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": true,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "subject_title-1:subject_title_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "subject_title-1:subject_title_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    }
  },
  {
    "op": "core/column-addition",
    "description": "Create column subject_title-1:subject_title_term.uri at index 158 based on column subject_title-1:subject_title_term.value using expression grel:\"http://id.loc.gov/authorities/names/\" + cell.recon.match.id",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "subject_title-1:subject_title_term.uri",
    "baseColumnName": "subject_title-1:subject_title_term.value",
    "expression": "grel:'http://id.loc.gov/authorities/names/' + cell.recon.match.id",
    "onError": "set-to-blank"
  },
   {
    "op": "core/column-addition",
    "description": "Create column subject_title-1:subject_title_term.authority at index 110 based on column subject_title-1:subject_title_term.value using expression grel:'fast'",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_title-1:subject_title_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_title-1:subject_title_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "subject_title-1:subject_title_term.authority",
    "baseColumnName": "subject_title-1:subject_title_term.value",
    "expression": "grel:'naf'",
    "onError": "set-to-blank"
  },
{
    "op": "core/mass-edit",
    "description": "Mass edit cells in column subject_title-1:subject_title_term.authority",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_title-1:subject_title_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_title-1:subject_title_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "subject_title-1:subject_title_term.authority",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column subject_title-1:subject_title_term.uri",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "subject_title-1:subject_title_term.value: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "subject_title-1:subject_title_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "subject_title-1:subject_title_term.uri",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "NONE"
      }
    ]
  },
    {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column form-1:form_term.value",
    "columnName": "form-1:form_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/column-addition",
    "description": "Create column form-1:form_term.uri at index 186 based on column form-1:form_term.value using expression grel:cell.cross('HyacinthForm', 'Label').cells['URI'].value[0]",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": true,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "form-1:form_term.uri",
    "baseColumnName": "form-1:form_term.value",
    "expression": "grel:cell.cross('HyacinthForm', 'Label').cells['URI'].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column form-1:form_term.authority at index 186 based on column form-1:form_term.value using expression grel:cell.cross(\"HyacinthForm\",\"Label\").cells[\"Source\"].value[0]",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": true,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "form-1:form_term.authority",
    "baseColumnName": "form-1:form_term.value",
    "expression": "grel:cell.cross(\"HyacinthForm\",\"Label\").cells[\"Source\"].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column form-1:form_term.authority using expression grel:value.replace(/(.+), .+/,\"$1\")",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": true,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "form-1:form_term.authority",
    "expression": "grel:value.replace(/(.+), .+/,\"$1\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column genre-1:genre_term.value",
    "columnName": "genre-1:genre_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
{
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column language-1:language_term.value",
    "columnName": "language-1:language_term.value",
    "keyColumnName": "_identifiers-1",
    "mode": "separator",
    "separator": ";",
    "regex": false
  },
  {
    "op": "core/column-addition",
    "description": "Create column language-1:language_term.uri at index 186 based on column language-1:language_term.value using expression grel:cell.cross('iso6392Languages', 'Label').cells['URI'].value[0]",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "_digital_object_type.string_key",
          "expression": "value",
          "columnName": "_digital_object_type.string_key",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "item",
                "l": "item"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": true,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "language-1:language_term.uri",
    "baseColumnName": "language-1:language_term.value",
    "expression": "grel:cell.cross('iso6392Languages', 'Label').cells['URI'].value[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column language-1:language_term.authority at index 184 based on column language-1:language_term.value using expression grel:value.replace(/.+/,'iso639-2b')",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "language-1:language_term.value",
          "expression": "isBlank(value).toString()",
          "columnName": "language-1:language_term.value",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "newColumnName": "language-1:language_term.authority",
    "baseColumnName": "language-1:language_term.value",
    "expression": "grel:value.replace(/.+/,'iso639-2b')",
    "onError": "set-to-blank"
  },
   {
    "op": "core/column-reorder",
    "description": "Reorder columns",
    "columnNames": [
      "_project.string_key",
      "_digital_object_type.string_key",
      "_identifiers-1",
      "_parent_digital_objects-1.identifier",
      "Master assets filenames",
      "_import_file.import_path",
      "_import_file.original_file_path",
      "_import_file.import_type",
      "note_derived_from-1:note_derived_from_value",
      "Service (Mezzanine) assets filenames",
      "_import_file.service_copy_import_path",
      "_import_file.service_copy_import_type",
      "Access (Streaming) assets filenames",
      "_import_file.access_copy_import_path",
      "_restrictions.restricted_onsite",
      "_restrictions.restricted_size_image",
      "restriction_on_access-1:restriction_on_access_value",
      "use_and_reproduction-1:use_and_reproduction_term.value",
      "use_and_reproduction-1:use_and_reproduction_term.authority",
      "use_and_reproduction-1:use_and_reproduction_term.uri",
      "embargo_release_date-1:embargo_release_date_value",
      "accession_number-1:accession_number_value",
      "clio_identifier-1:clio_identifier_value",
      "object_in_context_url-1:object_in_context_url_value",
      "omeka_identifier-1:omeka_identifier_value",
      "order_number-1:order_number_value",
      "location-1:location_term.value",
      "location-1:location_term.uri",
      "location-1:location_term.code",
      "location-1:location_term.authority",
      "location-1:location_sublocation",
      "location-1:location_shelf_location-1:location_shelf_location_box_number",
      "location-1:location_shelf_location-1:location_shelf_location_folder_number",
      "location-1:location_shelf_location-1:location_shelf_location_item_number",
      "location-1:location_shelf_location-1:location_shelf_location_free_text",
      "collection-1:collection_term.value",
      "collection-1:collection_term.uri",
      "collection-1:collection_archival_series-1:collection_archival_series_part-1:collection_archival_series_part_title",
      "collection-1:collection_archival_series-1:collection_archival_series_part-1:collection_archival_series_part_type",
      "collection-1:collection_archival_series-1:collection_archival_series_part-1:collection_archival_series_part_level",
      "collection-1:collection_archival_series-1:collection_archival_series_part-2:collection_archival_series_part_title",
      "collection-1:collection_archival_series-1:collection_archival_series_part-2:collection_archival_series_part_level",
      "collection-1:collection_archival_series-1:collection_archival_series_part-2:collection_archival_series_part_type",
      "collection-1:collection_archival_series-1:collection_archival_series_part-3:collection_archival_series_part_title",
      "collection-1:collection_archival_series-1:collection_archival_series_part-3:collection_archival_series_part_level",
      "collection-1:collection_archival_series-1:collection_archival_series_part-3:collection_archival_series_part_type",
      "title-1:title_sort_portion",
      "title-1:title_non_sort_portion",
      "alternative_title-1:alternative_title_value",
      "alternative_title-2:alternative_title_value",
      "alternative_title-3:alternative_title_value",
      "alternative_title-4:alternative_title_value",
      "alternative_title-5:alternative_title_value",
      "alternative_title-6:alternative_title_value",
      "alternative_title-7:alternative_title_value",
      "alternative_title-8:alternative_title_value",
      "alternative_title-9:alternative_title_value",
      "alternative_title-10:alternative_title_value",
      "abstract-1:abstract_value",
      "name-1:name_term.value",
      "name-1:name_term.authority",
      "name-1:name_term.uri",
      "name-1:name_term.name_identifier",
      "name-1:name_term.name_type",
      "name-1:name_usage_primary",
      "name-1:name_role-1:name_role_term.value",
      "name-1:name_role-1:name_role_term.authority",
      "name-1:name_role-1:name_role_term.uri",
      "name-1:name_role-2:name_role_term.value",
      "name-1:name_role-2:name_role_term.authority",
      "name-1:name_role-2:name_role_term.uri",
      "name-1:name_role-3:name_role_term.value",
      "name-1:name_role-3:name_role_term.authority",
      "name-1:name_role-3:name_role_term.uri",
      "name-2:name_term.value",
      "name-2:name_term.authority",
      "name-2:name_term.uri",
      "name-2:name_term.name_identifier",
      "name-2:name_term.name_type",
      "name-2:name_role-1:name_role_term.value",
      "name-2:name_role-1:name_role_term.authority",
      "name-2:name_role-1:name_role_term.uri",
      "name-2:name_role-2:name_role_term.value",
      "name-2:name_role-2:name_role_term.authority",
      "name-2:name_role-2:name_role_term.uri",
      "name-2:name_role-3:name_role_term.value",
      "name-2:name_role-3:name_role_term.authority",
      "name-2:name_role-3:name_role_term.uri",
      "name-3:name_term.value",
      "name-3:name_term.authority",
      "name-3:name_term.name_type",
      "name-3:name_term.uri",
      "name-3:name_term.name_identifier",
      "name-3:name_role-1:name_role_term.value",
      "name-3:name_role-1:name_role_term.authority",
      "name-3:name_role-1:name_role_term.uri",
      "name-3:name_role-2:name_role_term.value",
      "name-3:name_role-2:name_role_term.authority",
      "name-3:name_role-2:name_role_term.uri",
      "name-3:name_role-3:name_role_term.value",
      "name-3:name_role-3:name_role_term.authority",
      "name-3:name_role-3:name_role_term.uri",
      "name-4:name_term.value",
      "name-4:name_term.authority",
      "name-4:name_term.uri",
      "name-4:name_term.name_identifier",
      "name-4:name_term.name_type",
      "name-4:name_role-1:name_role_term.value",
      "name-4:name_role-1:name_role_term.authority",
      "name-4:name_role-1:name_role_term.uri",
      "name-4:name_role-2:name_role_term.value",
      "name-4:name_role-2:name_role_term.authority",
      "name-4:name_role-2:name_role_term.uri",
      "name-4:name_role-3:name_role_term.value",
      "name-4:name_role-3:name_role_term.authority",
      "name-4:name_role-3:name_role_term.uri",
      "name-5:name_term.value",
      "name-5:name_term.authority",
      "name-5:name_term.uri",
      "name-5:name_term.name_identifier",
      "name-5:name_term.name_type",
      "name-5:name_role-1:name_role_term.value",
      "name-5:name_role-1:name_role_term.authority",
      "name-5:name_role-1:name_role_term.uri",
      "name-5:name_role-2:name_role_term.value",
      "name-5:name_role-2:name_role_term.authority",
      "name-5:name_role-2:name_role_term.uri",
      "name-5:name_role-3:name_role_term.value",
      "name-5:name_role-3:name_role_term.authority",
      "name-5:name_role-3:name_role_term.uri",
      "name-6:name_term.value",
      "name-6:name_term.authority",
      "name-6:name_term.uri",
      "name-6:name_term.name_identifier",
      "name-6:name_term.name_type",
      "name-6:name_role-1:name_role_term.value",
      "name-6:name_role-1:name_role_term.authority",
      "name-6:name_role-1:name_role_term.uri",
      "name-6:name_role-2:name_role_term.value",
      "name-6:name_role-2:name_role_term.authority",
      "name-6:name_role-2:name_role_term.uri",
      "name-6:name_role-3:name_role_term.value",
      "name-6:name_role-3:name_role_term.authority",
      "name-6:name_role-3:name_role_term.uri",
      "name-7:name_term.value",
      "name-7:name_term.authority",
      "name-7:name_term.uri",
      "name-7:name_term.name_identifier",
      "name-7:name_term.name_type",
      "name-7:name_role-1:name_role_term.value",
      "name-7:name_role-1:name_role_term.authority",
      "name-7:name_role-1:name_role_term.uri",
      "name-7:name_role-2:name_role_term.value",
      "name-7:name_role-2:name_role_term.authority",
      "name-7:name_role-2:name_role_term.uri",
      "name-7:name_role-3:name_role_term.value",
      "name-7:name_role-3:name_role_term.authority",
      "name-7:name_role-3:name_role_term.uri",
      "name-8:name_term.value",
      "name-8:name_term.authority",
      "name-8:name_term.uri",
      "name-8:name_term.name_identifier",
      "name-8:name_term.name_type",
      "name-8:name_role-1:name_role_term.value",
      "name-8:name_role-1:name_role_term.authority",
      "name-8:name_role-1:name_role_term.uri",
      "name-8:name_role-2:name_role_term.value",
      "name-8:name_role-2:name_role_term.authority",
      "name-8:name_role-2:name_role_term.uri",
      "name-8:name_role-3:name_role_term.value",
      "name-8:name_role-3:name_role_term.authority",
      "name-8:name_role-3:name_role_term.uri",
      "name-9:name_term.value",
      "name-9:name_term.authority",
      "name-9:name_term.uri",
      "name-9:name_term.name_identifier",
      "name-9:name_term.name_type",
      "name-9:name_role-1:name_role_term.value",
      "name-9:name_role-1:name_role_term.authority",
      "name-9:name_role-1:name_role_term.uri",
      "name-9:name_role-2:name_role_term.value",
      "name-9:name_role-2:name_role_term.authority",
      "name-9:name_role-2:name_role_term.uri",
      "name-9:name_role-3:name_role_term.value",
      "name-9:name_role-3:name_role_term.authority",
      "name-9:name_role-3:name_role_term.uri",
      "name-10:name_term.value",
      "name-10:name_term.authority",
      "name-10:name_term.uri",
      "name-10:name_term.name_identifier",
      "name-10:name_term.name_type",
      "name-10:name_role-1:name_role_term.value",
      "name-10:name_role-1:name_role_term.authority",
      "name-10:name_role-1:name_role_term.uri",
      "name-10:name_role-2:name_role_term.value",
      "name-10:name_role-2:name_role_term.authority",
      "name-10:name_role-2:name_role_term.uri",
      "name-10:name_role-3:name_role_term.value",
      "name-10:name_role-3:name_role_term.authority",
      "name-10:name_role-3:name_role_term.uri",
      "subject_topic-1:subject_topic_term.value",
      "subject_topic-1:subject_topic_term.authority",
      "subject_topic-1:subject_topic_term.uri",
      "subject_topic-2:subject_topic_term.value",
      "subject_topic-2:subject_topic_term.authority",
      "subject_topic-2:subject_topic_term.uri",
      "subject_topic-3:subject_topic_term.value",
      "subject_topic-3:subject_topic_term.authority",
      "subject_topic-3:subject_topic_term.uri",
      "subject_topic-4:subject_topic_term.value",
      "subject_topic-4:subject_topic_term.authority",
      "subject_topic-4:subject_topic_term.uri",
      "subject_topic-5:subject_topic_term.value",
      "subject_topic-5:subject_topic_term.authority",
      "subject_topic-5:subject_topic_term.uri",
      "subject_topic-6:subject_topic_term.value",
      "subject_topic-6:subject_topic_term.authority",
      "subject_topic-6:subject_topic_term.uri",
      "subject_topic-7:subject_topic_term.value",
      "subject_topic-7:subject_topic_term.authority",
      "subject_topic-7:subject_topic_term.uri",
      "subject_topic-8:subject_topic_term.value",
      "subject_topic-8:subject_topic_term.authority",
      "subject_topic-8:subject_topic_term.uri",
      "subject_topic-9:subject_topic_term.value",
      "subject_topic-9:subject_topic_term.authority",
      "subject_topic-9:subject_topic_term.uri",
      "subject_topic-10:subject_topic_term.value",
      "subject_topic-10:subject_topic_term.authority",
      "subject_topic-10:subject_topic_term.uri",
      "subject_name-1:subject_name_term.value",
      "subject_name-1:subject_name_term.authority",
      "subject_name-1:subject_name_term.uri",
      "subject_name-1:subject_name_term.name_identifier",
      "subject_name-1:subject_name_term.name_type",
      "subject_name-2:subject_name_term.value",
      "subject_name-2:subject_name_term.authority",
      "subject_name-2:subject_name_term.uri",
      "subject_name-2:subject_name_term.name_identifier",
      "subject_name-2:subject_name_term.name_type",
      "subject_name-3:subject_name_term.value",
      "subject_name-3:subject_name_term.authority",
      "subject_name-3:subject_name_term.uri",
      "subject_name-3:subject_name_term.name_identifier",
      "subject_name-3:subject_name_term.name_type",
      "subject_name-4:subject_name_term.value",
      "subject_name-4:subject_name_term.authority",
      "subject_name-4:subject_name_term.uri",
      "subject_name-4:subject_name_term.name_identifier",
      "subject_name-4:subject_name_term.name_type",
      "subject_name-5:subject_name_term.value",
      "subject_name-5:subject_name_term.authority",
      "subject_name-5:subject_name_term.uri",
      "subject_name-5:subject_name_term.name_identifier",
      "subject_name-5:subject_name_term.name_type",
      "subject_name-6:subject_name_term.value",
      "subject_name-6:subject_name_term.authority",
      "subject_name-6:subject_name_term.uri",
      "subject_name-6:subject_name_term.name_identifier",
      "subject_name-6:subject_name_term.name_type",
      "subject_name-7:subject_name_term.value",
      "subject_name-7:subject_name_term.authority",
      "subject_name-7:subject_name_term.uri",
      "subject_name-7:subject_name_term.name_identifier",
      "subject_name-7:subject_name_term.name_type",
      "subject_name-8:subject_name_term.value",
      "subject_name-8:subject_name_term.authority",
      "subject_name-8:subject_name_term.uri",
      "subject_name-8:subject_name_term.name_identifier",
      "subject_name-8:subject_name_term.name_type",
      "subject_name-9:subject_name_term.value",
      "subject_name-9:subject_name_term.authority",
      "subject_name-9:subject_name_term.uri",
      "subject_name-9:subject_name_term.name_identifier",
      "subject_name-9:subject_name_term.name_type",
      "subject_name-10:subject_name_term.value",
      "subject_name-10:subject_name_term.authority",
      "subject_name-10:subject_name_term.uri",
      "subject_name-10:subject_name_term.name_identifier",
      "subject_name-10:subject_name_term.name_type",
      "subject_geographic-1:subject_geographic_term.value",
      "subject_geographic-1:subject_geographic_term.authority",
      "subject_geographic-1:subject_geographic_term.uri",
      "subject_geographic-2:subject_geographic_term.value",
      "subject_geographic-2:subject_geographic_term.authority",
      "subject_geographic-2:subject_geographic_term.uri",
      "subject_geographic-3:subject_geographic_term.value",
      "subject_geographic-3:subject_geographic_term.authority",
      "subject_geographic-3:subject_geographic_term.uri",
      "subject_geographic-4:subject_geographic_term.value",
      "subject_geographic-4:subject_geographic_term.authority",
      "subject_geographic-4:subject_geographic_term.uri",
      "subject_geographic-5:subject_geographic_term.value",
      "subject_geographic-5:subject_geographic_term.authority",
      "subject_geographic-5:subject_geographic_term.uri",
      "subject_geographic-6:subject_geographic_term.value",
      "subject_geographic-6:subject_geographic_term.authority",
      "subject_geographic-6:subject_geographic_term.uri",
      "subject_geographic-7:subject_geographic_term.value",
      "subject_geographic-7:subject_geographic_term.authority",
      "subject_geographic-7:subject_geographic_term.uri",
      "subject_geographic-8:subject_geographic_term.value",
      "subject_geographic-8:subject_geographic_term.authority",
      "subject_geographic-8:subject_geographic_term.uri",
      "subject_geographic-9:subject_geographic_term.value",
      "subject_geographic-9:subject_geographic_term.authority",
      "subject_geographic-9:subject_geographic_term.uri",
      "subject_geographic-10:subject_geographic_term.value",
      "subject_geographic-10:subject_geographic_term.authority",
      "subject_geographic-10:subject_geographic_term.uri",
      "subject_title-1:subject_title_term.value",
      "subject_title-1:subject_title_term.authority",
      "subject_title-1:subject_title_term.uri",
      "subject_title-2:subject_title_term.value",
      "subject_title-2:subject_title_term.authority",
      "subject_title-2:subject_title_term.uri",
      "subject_title-3:subject_title_term.value",
      "subject_title-3:subject_title_term.authority",
      "subject_title-3:subject_title_term.uri",
      "subject_title-4:subject_title_term.value",
      "subject_title-4:subject_title_term.authority",
      "subject_title-4:subject_title_term.uri",
      "subject_title-5:subject_title_term.value",
      "subject_title-5:subject_title_term.authority",
      "subject_title-5:subject_title_term.uri",
      "subject_title-6:subject_title_term.value",
      "subject_title-6:subject_title_term.authority",
      "subject_title-6:subject_title_term.uri",
      "subject_title-7:subject_title_term.value",
      "subject_title-7:subject_title_term.authority",
      "subject_title-7:subject_title_term.uri",
      "subject_title-8:subject_title_term.value",
      "subject_title-8:subject_title_term.authority",
      "subject_title-8:subject_title_term.uri",
      "subject_title-9:subject_title_term.value",
      "subject_title-9:subject_title_term.authority",
      "subject_title-9:subject_title_term.uri",
      "subject_title-10:subject_title_term.value",
      "subject_title-10:subject_title_term.authority",
      "subject_title-10:subject_title_term.uri",
      "type_of_resource-1:type_of_resource_value",
      "form-1:form_term.value",
      "form-1:form_term.authority",
      "form-1:form_term.uri",
      "form-2:form_term.value",
      "form-2:form_term.authority",
      "form-2:form_term.uri",
      "form-3:form_term.value",
      "form-3:form_term.authority",
      "form-3:form_term.uri",
      "form-4:form_term.value",
      "form-4:form_term.authority",
      "form-4:form_term.uri",
      "form-5:form_term.value",
      "form-5:form_term.authority",
      "form-5:form_term.uri",
      "form-6:form_term.value",
      "form-6:form_term.authority",
      "form-6:form_term.uri",
      "form-7:form_term.value",
      "form-7:form_term.authority",
      "form-7:form_term.uri",
      "form-8:form_term.value",
      "form-8:form_term.authority",
      "form-8:form_term.uri",
      "form-9:form_term.value",
      "form-9:form_term.authority",
      "form-9:form_term.uri",
      "form-10:form_term.value",
      "form-10:form_term.authority",
      "form-10:form_term.uri",
      "genre-1:genre_term.value",
      "genre-1:genre_term.authority",
      "genre-1:genre_term.uri",
      "genre-2:genre_term.value",
      "genre-2:genre_term.authority",
      "genre-2:genre_term.uri",
      "genre-3:genre_term.value",
      "genre-3:genre_term.authority",
      "genre-3:genre_term.uri",
      "genre-4:genre_term.value",
      "genre-4:genre_term.authority",
      "genre-4:genre_term.uri",
      "genre-5:genre_term.value",
      "genre-5:genre_term.authority",
      "genre-5:genre_term.uri",
      "genre-6:genre_term.value",
      "genre-6:genre_term.authority",
      "genre-6:genre_term.uri",
      "genre-7:genre_term.value",
      "genre-7:genre_term.authority",
      "genre-7:genre_term.uri",
      "genre-8:genre_term.value",
      "genre-8:genre_term.authority",
      "genre-8:genre_term.uri",
      "genre-9:genre_term.value",
      "genre-9:genre_term.authority",
      "genre-9:genre_term.uri",
      "genre-10:genre_term.value",
      "genre-10:genre_term.authority",
      "genre-10:genre_term.uri",
      "place_of_origin-1:place_of_origin_value",
      "publisher-1:publisher_value",
      "date_created_textual-1:date_created_textual_value",
      "date_created-1:date_created_start_value",
      "date_created-1:date_created_end_value",
      "date_created-1:date_created_type",
      "date_created-1:date_created_key_date",
      "extent-1:extent_value",
      "language-1:language_term.value",
      "language-1:language_term.authority",
      "language-1:language_term.uri",
      "language-2:language_term.value",
      "language-2:language_term.authority",
      "language-2:language_term.uri",
      "language-3:language_term.value",
      "language-3:language_term.authority",
      "language-3:language_term.uri",
      "language-4:language_term.value",
      "language-4:language_term.authority",
      "language-4:language_term.uri",
      "language-5:language_term.value",
      "language-5:language_term.authority",
      "language-5:language_term.uri",
      "language-6:language_term.value",
      "language-6:language_term.authority",
      "language-6:language_term.uri",
      "language-7:language_term.value",
      "language-7:language_term.authority",
      "language-7:language_term.uri",
      "language-8:language_term.value",
      "language-8:language_term.authority",
      "language-8:language_term.uri",
      "language-9:language_term.value",
      "language-9:language_term.authority",
      "language-9:language_term.uri",
      "language-10:language_term.value",
      "language-10:language_term.authority",
      "language-10:language_term.uri",
      "digital_origin-1:digital_origin_value",
      "coordinates-1:coordinates_value",
      "copyright_note-1:copyright_note_value",
      "note-1:note_type",
      "note-1:note_value",
      "note-2:note_type",
      "note-2:note_value",
      "note-3:note_type",
      "note-3:note_value",
      "note-4:note_type",
      "note-4:note_value",
      "note-5:note_type",
      "note-5:note_value",
      "note-6:note_type",
      "note-6:note_value",
      "note-7:note_type",
      "note-7:note_value",
      "note-8:note_type",
      "note-8:note_value",
      "note-9:note_type",
      "note-9:note_value",
      "note-10:note_type",
      "note-10:note_value",
      "internal_note-1:internal_note_value",
      "internal_note-2:internal_note_value",
      "internal_note-3:internal_note_value",
      "internal_note-4:internal_note_value",
      "internal_note-5:internal_note_value",
      "internal_note-6:internal_note_value",
      "internal_note-7:internal_note_value",
      "internal_note-8:internal_note_value",
      "internal_note-9:internal_note_value",
      "internal_note-10:internal_note_value",
      "_publish",
      "_publish_targets-1.string_key"
    ]
  }
]